#@ load("@ytt:data", "data")
---
apiVersion: kappctrl.k14s.io/v1alpha1
kind: App
metadata:
  name: librechat
  namespace: bootstrap
  annotations:
    kapp.k14s.io/change-rule.0: "upsert after upserting contour"
    kapp.k14s.io/change-rule.1: "delete before deleting contour"
spec:
  serviceAccountName: bootstrap
  syncPeriod: 10m
  fetch:
  - helmChart:
      name: librechat
      version: "1.8.10"
      repository:
        url: https://charts.blue-atlas.de
  template:
  - helmTemplate:
      namespace: librechat
      valuesFrom:
      - secretRef:
          name: librechat-values
  - ytt:
      inline:
        paths:
          dev-image-overlay.yaml: |
            #@ load("@ytt:overlay", "overlay")
            #@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "librechat-librechat"}})
            ---
            spec:
              template:
                spec:
                  containers:
                  #@overlay/match by=overlay.map_key("name")
                    - name: librechat-librechat
                      image: ghcr.io/danny-avila/librechat-dev@sha256:5d0dcca7d2b1e6bdce75287ed6575bbd12b1ca5d835aa9f2fd1365ae6e95bcc8
          namespace.yaml: |
            ---
            apiVersion: v1
            kind: Namespace
            metadata:
              name: librechat
          secretimport.yaml: |
            ---
            apiVersion: secretgen.carvel.dev/v1alpha1
            kind: SecretImport
            metadata:
              name: wildcard-tls
              namespace: librechat
            spec:
              fromNamespace: projectcontour
          #@yaml/text-templated-strings
          librechat-credentials-env.yaml: |
            ---
            apiVersion: v1
            kind: Secret
            metadata:
              name: librechat-credentials-env
              namespace: librechat
            type: Opaque
            stringData:
              CREDS_KEY: (@= data.values.librechat.env.credsKey @)
              JWT_SECRET: (@= data.values.librechat.env.jwtSecret @)
              JWT_REFRESH_SECRET: (@= data.values.librechat.env.jwtRefreshSecret @)
              MEILI_MASTER_KEY: (@= data.values.librechat.env.meiliMasterKey @)
              ALLOW_EMAIL_LOGIN: "true"
              ALLOW_REGISTRATION: "true"
              FIRECRAWL_API_KEY: (@= data.values.librechat.env.firecrawlApiKey @)
              FIRECRAWL_API_URL: "https://api.firecrawl.dev"
              COHERE_API_KEY: (@= data.values.librechat.env.cohereApiKey @)
              SEARXNG_INSTANCE_URL: "http://searxng:8888"
          searxng.yaml: |
            ---
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              labels:
                app: searxng
              name: searxng
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: searxng
              template:
                metadata:
                  labels:
                    app: searxng
                spec:
                  ports:
                  - port: 8080
                    protocol: TCP
                    name: app
                  containers:
                  - image: searxng/searxng
                    name: searxng
                    volumeMounts:
                    - name: searxng-config
                      mountPath: /etc/searxng
                    ports:
                    - containerPort: 8080
                  volumes:
                  - name: searxng-config
                    configMap:
                      name: searxng-config
            ---
            apiVersion: v1
            kind: Service
            metadata:
              labels:
                app: searxng
              name: searxng
            spec:
              ports:
              - port: 8080
                targetPort: app
              selector:
                app: searxng
              type: ClusterIP
            ---
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: searxng-config
            data:
              settings.yml: |
                general:
                  # Debug mode, only for development. Is overwritten by ${SEARXNG_DEBUG}
                  debug: false
                  # displayed name
                  instance_name: "SearXNG"
                  # For example: https://example.com/privacy
                  privacypolicy_url: false
                  # use true to use your own donation page written in searx/info/en/donate.md
                  # use false to disable the donation link
                  donation_url: false
                  # mailto:contact@example.com
                  contact_url: false
                  # record stats
                  enable_metrics: true
                  # expose stats in open metrics format at /metrics
                  # leave empty to disable (no password set)
                  # open_metrics: <password>
                  open_metrics: ''
                brand:
                  new_issue_url: https://github.com/searxng/searxng/issues/new
                  docs_url: https://docs.searxng.org/
                  public_instances: https://searx.space
                  wiki_url: https://github.com/searxng/searxng/wiki
                  issue_url: https://github.com/searxng/searxng/issues
                  # custom:
                  #   maintainer: "Jon Doe"
                  #   # Custom entries in the footer: [title]: [link]
                  #   links:
                  #     Uptime: https://uptime.searxng.org/history/darmarit-org
                  #     About: "https://searxng.org"
                search:
                  # Filter results. 0: None, 1: Moderate, 2: Strict
                  safe_search: 1
                  # Existing autocomplete backends: "360search", "baidu", "brave", "dbpedia", "duckduckgo", "google", "yandex",
                  # "mwmbl", "naver", "seznam", "sogou", "startpage", "stract", "swisscows", "quark", "qwant", "wikipedia" -
                  # leave blank to turn it off by default.
                  autocomplete: ""
                  # minimun characters to type before autocompleter starts
                  autocomplete_min: 4
                  # backend for the favicon near URL in search results.
                  # Available resolvers: "allesedv", "duckduckgo", "google", "yandex" - leave blank to turn it off by default.
                  favicon_resolver: ""
                  # Default search language - leave blank to detect from browser information or
                  # use codes from 'languages.py'
                  default_lang: "en-US"
                  # max_page: 0  # if engine supports paging, 0 means unlimited numbers of pages
                  # Available languages
                  # languages:
                  #   - all
                  #   - en
                  #   - en-US
                  #   - de
                  #   - it-IT
                  #   - fr
                  #   - fr-BE
                  # ban time in seconds after engine errors
                  ban_time_on_fail: 5
                  # max ban time in seconds after engine errors
                  max_ban_time_on_fail: 120
                  suspended_times:
                    # Engine suspension time after error (in seconds; set to 0 to disable)
                    # For error "Access denied" and "HTTP error [402, 403]"
                    SearxEngineAccessDenied: 86400
                    # For error "CAPTCHA"
                    SearxEngineCaptcha: 86400
                    # For error "Too many request" and "HTTP error 429"
                    SearxEngineTooManyRequests: 3600
                    # Cloudflare CAPTCHA
                    cf_SearxEngineCaptcha: 1296000
                    cf_SearxEngineAccessDenied: 86400
                    # ReCAPTCHA
                    recaptcha_SearxEngineCaptcha: 604800
                  # remove format to deny access, use lower case.
                  # formats: [html, csv, json, rss]
                  formats:
                    - html
                    - json
                server:
                  # Is overwritten by ${SEARXNG_PORT} and ${SEARXNG_BIND_ADDRESS}
                  port: 8888
                  bind_address: "127.0.0.1"
                  # public URL of the instance, to ensure correct inbound links. Is overwritten
                  # by ${SEARXNG_BASE_URL}.
                  base_url: false # "http://example.com/location"
                  # rate limit the number of request on the instance, block some bots.
                  # Is overwritten by ${SEARXNG_LIMITER}
                  limiter: false
                  # enable features designed only for public instances.
                  # Is overwritten by ${SEARXNG_PUBLIC_INSTANCE}
                  public_instance: false
                  # If your instance owns a /etc/searxng/settings.yml file, then set the following
                  # values there.
                  secret_key: "v28BuqucJJj10rwp0l6AXDws7xT1v1m" # Is overwritten by ${SEARXNG_SECRET}
                  # Proxy image results through SearXNG. Is overwritten by ${SEARXNG_IMAGE_PROXY}
                  image_proxy: false
                  # 1.0 and 1.1 are supported
                  http_protocol_version: "1.0"
                  # POST queries are more secure as they don't show up in history but may cause
                  # problems when using Firefox containers.
                  # Is overwritten by ${SEARXNG_METHOD}
                  method: "POST"
                  default_http_headers:
                    X-Content-Type-Options: nosniff
                    X-Download-Options: noopen
                    X-Robots-Tag: noindex, nofollow
                    Referrer-Policy: no-referrer
                valkey:
                  # URL to connect valkey database. Is overwritten by ${SEARXNG_VALKEY_URL}.
                  # https://docs.searxng.org/admin/settings/settings_valkey.html#settings-valkey
                  # url: valkey://localhost:6379/0
                  url: false
                ui:
                  # Custom static path - leave it blank if you didn't change
                  static_path: ""
                  # Custom templates path - leave it blank if you didn't change
                  templates_path: ""
                  # query_in_title: When true, the result page's titles contains the query
                  # it decreases the privacy, since the browser can records the page titles.
                  query_in_title: false
                  # infinite_scroll: When true, automatically loads the next page when scrolling to bottom of the current page.
                  infinite_scroll: false
                  # ui theme
                  default_theme: simple
                  # center the results ?
                  center_alignment: false
                  # URL prefix of the internet archive, don't forget trailing slash (if needed).
                  # cache_url: "https://webcache.googleusercontent.com/search?q=cache:"
                  # Default interface locale - leave blank to detect from browser information or
                  # use codes from the 'locales' config section
                  default_locale: ""
                  # Open result links in a new tab by default
                  # results_on_new_tab: false
                  theme_args:
                    # style of simple theme: auto, light, dark
                    simple_style: auto
                  # Perform search immediately if a category selected.
                  # Disable to select multiple categories at once and start the search manually.
                  search_on_category_select: true
                  # Hotkeys: default or vim
                  hotkeys: default
                  # URL formatting: pretty, full or host
                  url_formatting: pretty
                # Lock arbitrary settings on the preferences page.
                #
                # preferences:
                #   lock:
                #     - categories
                #     - language
                #     - autocomplete
                #     - favicon
                #     - safesearch
                #     - method
                #     - doi_resolver
                #     - locale
                #     - theme
                #     - results_on_new_tab
                #     - infinite_scroll
                #     - search_on_category_select
                #     - method
                #     - image_proxy
                #     - query_in_title

                # communication with search engines
                #
                outgoing:
                  # default timeout in seconds, can be override by engine
                  request_timeout: 3.0
                  # the maximum timeout in seconds
                  # max_request_timeout: 10.0
                  # suffix of searx_useragent, could contain information like an email address
                  # to the administrator
                  useragent_suffix: ""
                  # The maximum number of concurrent connections that may be established.
                  pool_connections: 100
                  # Allow the connection pool to maintain keep-alive connections below this
                  # point.
                  pool_maxsize: 20
                  # See https://www.python-httpx.org/http2/
                  enable_http2: true
                  # uncomment below section if you want to use a custom server certificate
                  # see https://www.python-httpx.org/advanced/#changing-the-verification-defaults
                  # and https://www.python-httpx.org/compatibility/#ssl-configuration
                  #  verify: ~/.mitmproxy/mitmproxy-ca-cert.cer
                  #
                  # uncomment below section if you want to use a proxyq see: SOCKS proxies
                  #   https://2.python-requests.org/en/latest/user/advanced/#proxies
                  # are also supported: see
                  #   https://2.python-requests.org/en/latest/user/advanced/#socks
                  #
                  #  proxies:
                  #    all://:
                  #      - http://proxy1:8080
                  #      - http://proxy2:8080
                  #
                  #  using_tor_proxy: true
                  #
                  # Extra seconds to add in order to account for the time taken by the proxy
                  #
                  #  extra_proxy_timeout: 10
                  #
                  # uncomment below section only if you have more than one network interface
                  # which can be the source of outgoing search requests
                  #
                  #  source_ips:
                  #    - 1.1.1.1
                  #    - 1.1.1.2
                  #    - fe80::/126
                # Plugin configuration, for more details see
                #   https://docs.searxng.org/admin/settings/settings_plugins.html
                #
                plugins:
                  searx.plugins.calculator.SXNGPlugin:
                    active: true
                  searx.plugins.hash_plugin.SXNGPlugin:
                    active: true
                  searx.plugins.self_info.SXNGPlugin:
                    active: true
                  searx.plugins.unit_converter.SXNGPlugin:
                    active: true
                  searx.plugins.ahmia_filter.SXNGPlugin:
                    active: true
                  searx.plugins.hostnames.SXNGPlugin:
                    active: true
                  searx.plugins.oa_doi_rewrite.SXNGPlugin:
                    active: false
                  searx.plugins.tor_check.SXNGPlugin:
                    active: false
                  searx.plugins.tracker_url_remover.SXNGPlugin:
                    active: true
                # Configuration of the "Hostnames plugin":
                #
                # hostnames:
                #   replace:
                #     '(.*\.)?youtube\.com$': 'yt.example.com'
                #     '(.*\.)?youtu\.be$': 'yt.example.com'
                #     '(.*\.)?reddit\.com$': 'teddit.example.com'
                #     '(.*\.)?redd\.it$': 'teddit.example.com'
                #     '(www\.)?twitter\.com$': 'nitter.example.com'
                #   remove:
                #     - '(.*\.)?facebook.com$'
                #   low_priority:
                #     - '(.*\.)?google(\..*)?$'
                #   high_priority:
                #     - '(.*\.)?wikipedia.org$'
                #
                # Alternatively you can use external files for configuring the "Hostnames plugin":
                #
                # hostnames:
                #  replace: 'rewrite-hosts.yml'
                #
                # Content of 'rewrite-hosts.yml' (place the file in the same directory as 'settings.yml'):
                # '(.*\.)?youtube\.com$': 'yt.example.com'
                # '(.*\.)?youtu\.be$': 'yt.example.com'
                #
                checker:
                  # disable checker when in debug mode
                  off_when_debug: true
                  # use "scheduling: false" to disable scheduling
                  # scheduling: interval or int

                  # to activate the scheduler:
                  # * uncomment "scheduling" section
                  # * add "cache2 = name=searxngcache,items=2000,blocks=2000,blocksize=4096,bitmap=1"
                  #   to your uwsgi.ini

                  # scheduling:
                  #   start_after: [300, 1800]  # delay to start the first run of the checker
                  #   every: [86400, 90000]     # how often the checker runs

                  # additional tests: only for the YAML anchors (see the engines section)
                  #
                  additional_tests:
                    rosebud: &test_rosebud
                      matrix:
                        query: rosebud
                        lang: en
                      result_container:
                        - not_empty
                        - ['one_title_contains', 'citizen kane']
                      test:
                        - unique_results
                    android: &test_android
                      matrix:
                        query: ['android']
                        lang: ['en', 'de', 'fr', 'zh-CN']
                      result_container:
                        - not_empty
                        - ['one_title_contains', 'google']
                      test:
                        - unique_results
                  # tests: only for the YAML anchors (see the engines section)
                  tests:
                    infobox: &tests_infobox
                      infobox:
                        matrix:
                          query: ["linux", "new york", "bbc"]
                        result_container:
                          - has_infobox
                categories_as_tabs:
                  general:
                  images:
                  videos:
                  news:
                  map:
                  music:
                  it:
                  science:
                  files:
                  social media:
                engines:
                  - name: arch linux wiki
                    engine: archlinux
                    shortcut: al
                  - name: arxiv
                    engine: arxiv
                    shortcut: arx
                    timeout: 4.0
                  - name: bandcamp
                    engine: bandcamp
                    shortcut: bc
                    categories: music
                  - name: wikipedia
                    engine: wikipedia
                    shortcut: wp
                    # add "list" to the array to get results in the results list
                    display_type: ["infobox"]
                    categories: [general]
                  - name: bing images
                    engine: bing_images
                    shortcut: bii
                  - name: bing news
                    engine: bing_news
                    shortcut: bin
                  - name: bing videos
                    engine: bing_videos
                    shortcut: biv
                  - name: currency
                    engine: currency_convert
                    categories: general
                    shortcut: cc
                  - name: deviantart
                    engine: deviantart
                    shortcut: da
                    timeout: 3.0
                  - name: docker hub
                    engine: docker_hub
                    shortcut: dh
                    categories: [it, packages]
                  - name: wikidata
                    engine: wikidata
                    shortcut: wd
                    timeout: 3.0
                    weight: 2
                    # add "list" to the array to get results in the results list
                    display_type: ["infobox"]
                    tests: *tests_infobox
                    categories: [general]
                  - name: duckduckgo
                    engine: duckduckgo
                    shortcut: ddg
                  - name: flickr
                    categories: images
                    shortcut: fl
                    # You can use the engine using the official stable API, but you need an API
                    # key, see: https://www.flickr.com/services/apps/create/
                    # engine: flickr
                    # api_key: 'apikey' # required!
                    # Or you can use the html non-stable engine, activated by default
                    engine: flickr_noapi
                  - name: gentoo
                    engine: mediawiki
                    shortcut: ge
                    categories: ["it", "software wikis"]
                    base_url: "https://wiki.gentoo.org/"
                    api_path: "api.php"
                    search_type: text
                    timeout: 10
                  - name: github
                    engine: github
                    shortcut: gh
                  - name: google
                    engine: google
                    shortcut: go
                    # additional_tests:
                    #   android: *test_android
                  - name: google images
                    engine: google_images
                    shortcut: goi
                    # additional_tests:
                    #   android: *test_android
                    #   dali:
                    #     matrix:
                    #       query: ['Dali Christ']
                    #       lang: ['en', 'de', 'fr', 'zh-CN']
                    #     result_container:
                    #       - ['one_title_contains', 'Salvador']
                  - name: google news
                    engine: google_news
                    shortcut: gon
                    # additional_tests:
                    #   android: *test_android
                  - name: google videos
                    engine: google_videos
                    shortcut: gov
                    # additional_tests:
                    #   android: *test_android
                  - name: google scholar
                    engine: google_scholar
                    shortcut: gos
                  - name: mastodon users
                    engine: mastodon
                    mastodon_type: accounts
                    base_url: https://mastodon.social
                    shortcut: mau
                  - name: mastodon hashtags
                    engine: mastodon
                    mastodon_type: hashtags
                    base_url: https://mastodon.social
                    shortcut: mah
                  - name: mdn
                    shortcut: mdn
                    engine: json_engine
                    categories: [it]
                    paging: true
                    search_url: https://developer.mozilla.org/api/v1/search?q={query}&page={pageno}
                    results_query: documents
                    url_query: mdn_url
                    url_prefix: https://developer.mozilla.org
                    title_query: title
                    content_query: summary
                    about:
                      website: https://developer.mozilla.org
                      wikidata_id: Q3273508
                      official_api_documentation: null
                      use_official_api: false
                      require_api_key: false
                      results: JSON
                  - name: openstreetmap
                    engine: openstreetmap
                    shortcut: osm
                  - name: pinterest
                    engine: pinterest
                    shortcut: pin
                  - name: podcastindex
                    engine: podcastindex
                    shortcut: podcast
                  - name: public domain image archive
                    engine: public_domain_image_archive
                    shortcut: pdia
                  - name: pubmed
                    engine: pubmed
                    shortcut: pub
                    timeout: 3.0
                  - name: pypi
                    shortcut: pypi
                    engine: pypi
                  - name: reuters
                    engine: reuters
                    shortcut: reu
                    # https://docs.searxng.org/dev/engines/online/reuters.html
                    # sort_order = "relevance"
                  - name: soundcloud
                    engine: soundcloud
                    shortcut: sc
                  - name: stackoverflow
                    engine: stackexchange
                    shortcut: st
                    api_site: 'stackoverflow'
                    categories: [it, q&a]
                  - name: askubuntu
                    engine: stackexchange
                    shortcut: ubuntu
                    api_site: 'askubuntu'
                    categories: [it, q&a]
                  - name: superuser
                    engine: stackexchange
                    shortcut: su
                    api_site: 'superuser'
                    categories: [it, q&a]
                  - name: yahoo news
                    engine: yahoo_news
                    shortcut: yhn
                  - name: youtube
                    shortcut: yt
                    # You can use the engine using the official stable API, but you need an API
                    # key See: https://console.developers.google.com/project
                    #
                    # engine: youtube_api
                    # api_key: 'apikey' # required!
                    #
                    # Or you can use the html non-stable engine, activated by default
                    engine: youtube_noapi
                  - name: vimeo
                    engine: vimeo
                    shortcut: vm
                  - name: wikinews
                    engine: mediawiki
                    shortcut: wn
                    categories: [news, wikimedia]
                    base_url: "https://{language}.wikinews.org/"
                    search_type: text
                    srsort: create_timestamp_desc
                    about:
                      website: https://www.wikinews.org/
                      wikidata_id: Q964
                  - name: wiktionary
                    engine: mediawiki
                    shortcut: wt
                    categories: [dictionaries, wikimedia]
                    base_url: "https://{language}.wiktionary.org/"
                    search_type: text
                    about:
                      website: https://www.wiktionary.org/
                      wikidata_id: Q151
                  - name: wikicommons.images
                    engine: wikicommons
                    shortcut: wc
                    categories: images
                    search_type: images
                    number_of_results: 10
                  - name: wikicommons.videos
                    engine: wikicommons
                    shortcut: wcv
                    categories: videos
                    search_type: videos
                    number_of_results: 10
                  - name: wikicommons.audio
                    engine: wikicommons
                    shortcut: wca
                    categories: music
                    search_type: audio
                    number_of_results: 10
                  - name: wikicommons.files
                    engine: wikicommons
                    shortcut: wcf
                    categories: files
                    search_type: files
                    number_of_results: 10
                doi_resolvers:
                  oadoi.org: 'https://oadoi.org/'
                  doi.org: 'https://doi.org/'
                  sci-hub.se: 'https://sci-hub.se/'
                  sci-hub.st: 'https://sci-hub.st/'
                default_doi_resolver: 'oadoi.org'

  deploy:
  - kapp: 
      intoNs: librechat